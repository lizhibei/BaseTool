apply plugin: 'com.android.library'
//apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

        buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [APP_PACKAGE  : "com.dengjinwen.basetool.library"]
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    compileOnly "com.google.android.material:material:1.2.0-alpha05"
    compileOnly 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    compileOnly 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'
    compileOnly files('libs/core-3.3.3.jar')
    compileOnly 'com.google.code.gson:gson:2.8.2'

    //okhttp
    compileOnly 'com.squareup.okhttp3:logging-interceptor:3.8.0'

    //retrofit
    compileOnly 'com.squareup.retrofit2:retrofit:2.1.0'
    compileOnly 'com.squareup.retrofit2:converter-gson:2.1.0'
    compileOnly 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

    //rxjava
    compileOnly 'io.reactivex:rxandroid:1.2.0'

    compileOnly 'androidx.recyclerview:recyclerview:1.1.0'
    compileOnly 'androidx.cardview:cardview:1.0.0'

    compileOnly 'com.github.bumptech.glide:glide:4.9.0'

    compileOnly 'com.alibaba:arouter-api:1.2.2'

    api 'org.aspectj:aspectjrt:1.8.9'
}

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main
final def log = project.logger
final def variants = android.libraryVariants
variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}
